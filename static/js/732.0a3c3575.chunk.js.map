{"version":3,"file":"static/js/732.0a3c3575.chunk.js","mappings":"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","sources":["components/ui/Button.js","components/FriendList/FriendList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: none;\n  outline: none;\n  box-sizing: border-box;\n  padding: 5px;\n  display: block;\n  width: 100px;\n  border-radius: 10px;\n  border: 1px solid ${({ theme }) => theme.colors.backgroundBlueBtn};\n  background-color: ${({ theme }) => theme.colors.backgroundBlueBtn};\n  color: ${({ theme }) => theme.colors.white};\n  cursor: pointer;\n  transition: background-color 200ms ease, color 200ms ease;\n  :hover {\n    background-color: ${({ theme }) => theme.colors.white};\n    color: ${({ theme }) => theme.colors.backgroundBlueBtn};\n  }\n`;\n","import styled from 'styled-components';\nimport { useEffect } from 'react';\nimport { RiContactsBook2Line } from 'react-icons/ri';\nimport { Button } from 'components/ui/Button';\nimport { theme } from 'stylesConfig/theme';\nimport { useRedux } from 'hooks';\nimport { contactsOperations, contactsSelectors } from 'store/contacts';\n\nconst FriendListStyled = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst FriendListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  span {\n    margin: 5px;\n  }\n`;\n\nexport const FriendList = () => {\n  const [selector, dispatch] = useRedux();\n  const contacts = selector(contactsSelectors.getAllContacts);\n  const filter = selector(contactsSelectors.getFilter);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const deleteContactbyId = contactId => {\n    dispatch(contactsOperations.deleteContact(contactId));\n  };\n\n  const getFilteredContacts = () => {\n    const normilizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilter)\n    );\n  };\n\n  return (\n    <FriendListStyled>\n      {getFilteredContacts().map(({ id, name, number }) => (\n        <FriendListItem key={id}>\n          <RiContactsBook2Line fill={theme.colors.backgroundBlueBtn} />\n          <span>{name}: </span>\n          <span>{number}</span>\n          <Button type=\"button\" onClick={() => deleteContactbyId(id)}>\n            Delete\n          </Button>\n        </FriendListItem>\n      ))}\n    </FriendListStyled>\n  );\n};\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport { nanoid } from 'nanoid';\nimport styled from 'styled-components';\nimport * as Yup from 'yup';\nimport { Box } from 'components/Box';\nimport { Button } from 'components/ui/Button';\nimport { toast } from 'react-toastify';\nimport { useRedux } from 'hooks';\nimport { contactsOperations, contactsSelectors } from 'store/contacts';\nimport { useState } from 'react';\n\nconst Label = styled.label`\n  margin-bottom: 10px;\n`;\n\nconst ContactErrorMessage = styled(ErrorMessage)`\n  color: ${({ theme }) => theme.colors.alert};\n  font-size: 10px;\n`;\n\nexport const ContactForm = () => {\n  const [selector, dispatch] = useRedux();\n  const contacts = selector(contactsSelectors.getAllContacts);\n  const [number, setNumber] = useState(null);\n\n  const dataValidation = data =>\n    contacts.find(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    );\n\n  const onSubmit = data => {\n    const isAlreadyAdded = dataValidation(data);\n\n    if (isAlreadyAdded) {\n      toast.error(`${data.name} is already in your contacts`);\n      return;\n    }\n\n    const contact = {\n      id: nanoid(),\n      name: data.name,\n      number,\n    };\n\n    dispatch(contactsOperations.addContact(contact));\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    onSubmit(values);\n    resetForm();\n    setNumber('380');\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().max(16).required('Please, enter your name.'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n      }}\n      onSubmit={handleSubmit}\n      validationSchema={validationSchema}\n    >\n      <Form autoComplete=\"off\">\n        <Box\n          width=\"400px\"\n          margin=\"0 auto\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          as=\"section\"\n        >\n          <Label htmlFor=\"name\">\n            Name\n            <Field type=\"text\" name=\"name\" />\n            <ContactErrorMessage name=\"name\" component=\"p\" />\n          </Label>\n          <Label htmlFor=\"test\">\n            Number\n            <PhoneInput\n              country={'ua'}\n              value={number}\n              onChange={phone => setNumber(phone)}\n            />\n          </Label>\n          <Button type=\"submit\">Add contact</Button>\n        </Box>\n      </Form>\n    </Formik>\n  );\n};\n","import { useRedux } from 'hooks';\nimport { changeFilter, contactsSelectors } from 'store/contacts';\n\nexport const Filter = () => {\n  const [selector, dispatch] = useRedux();\n  const filter = selector(contactsSelectors.getFilter);\n\n  const onChange = e => {\n    return dispatch(changeFilter(e.currentTarget.value));\n  };\n  return <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />;\n};\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FriendList } from 'components/FriendList';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { Box } from 'components/Box';\nimport { useRedux } from 'hooks';\nimport { useEffect } from 'react';\nimport { contactsOperations, contactsSelectors } from 'store/contacts';\n\nconst ContactsPage = () => {\n  const [selector, dispatch] = useRedux();\n  const contacts = selector(contactsSelectors.getAllContacts);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Box\n        width=\"400px\"\n        margin=\"0 auto\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        as=\"section\"\n      >\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <label htmlFor=\"filter\">\n          Find contacts by name\n          <Filter />\n        </label>\n        {contacts.length !== 0 && (\n          <>\n            <FriendList />\n          </>\n        )}\n      </Box>\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Button","styled","theme","colors","backgroundBlueBtn","white","FriendListStyled","FriendListItem","FriendList","useRedux","selector","dispatch","contacts","contactsSelectors","filter","useEffect","contactsOperations","normilizedFilter","toLowerCase","contact","name","includes","getFilteredContacts","map","id","number","fill","type","onClick","contactId","Label","ContactErrorMessage","ErrorMessage","alert","ContactForm","useState","setNumber","onSubmit","data","isAlreadyAdded","find","dataValidation","toast","nanoid","validationSchema","Yup","max","required","initialValues","values","resetForm","autoComplete","Box","width","margin","display","flexDirection","as","htmlFor","component","country","value","onChange","phone","Filter","e","changeFilter","currentTarget","length","autoClose"],"sourceRoot":""}