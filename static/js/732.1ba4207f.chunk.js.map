{"version":3,"file":"static/js/732.1ba4207f.chunk.js","mappings":"4LAEaA,E,QAASC,GAAAA,OAAH,sXAQG,qBAAGC,MAAkBC,OAAOC,qBAC5B,qBAAGF,MAAkBC,OAAOC,qBACvC,qBAAGF,MAAkBC,OAAOE,SAIf,qBAAGH,MAAkBC,OAAOE,SACvC,qBAAGH,MAAkBC,OAAOC,sB,gMCTnCE,EAAmBL,EAAAA,GAAAA,GAAH,4DAKhBM,EAAiBN,EAAAA,GAAAA,GAAH,2HASPO,EAAa,WACxB,OAA6BC,EAAAA,EAAAA,KAA7B,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAWF,EAASG,EAAAA,GAAAA,gBACpBC,EAASJ,EAASG,EAAAA,GAAAA,YAExBE,EAAAA,EAAAA,YAAU,WACRJ,EAASK,EAAAA,GAAAA,mBACR,CAACL,IAcJ,OACE,SAACL,EAAD,UAT0B,WAC1B,IAAMW,EAAmBH,EAAOI,cAEhC,OAAON,EAASE,QAAO,SAAAK,GAAO,OAC5BA,EAAQC,KAAKF,cAAcG,SAASJ,MAMnCK,GAAsBC,KAAI,gBAAGC,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAMK,EAAb,EAAaA,OAAb,OACzB,UAAClB,EAAD,YACE,SAAC,MAAD,CAAqBmB,KAAMxB,EAAAA,EAAAA,OAAAA,qBAC3B,4BAAOkB,EAAP,SACA,0BAAOK,KACP,SAACzB,EAAA,EAAD,CAAQ2B,KAAK,SAASC,QAAS,kBAnBbC,EAmBqCL,OAlB7Db,EAASK,EAAAA,GAAAA,cAAiCa,IADlB,IAAAA,GAmBlB,sBAJmBL,S,2DCnCvBM,EAAQ7B,EAAAA,GAAAA,MAAH,gDAIE8B,EAAc,WACzB,OAA6BtB,EAAAA,EAAAA,KAA7B,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAWF,EAASG,EAAAA,GAAAA,gBAEpBmB,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbd,KAAM,GACNK,OAAQ,OAEVU,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,UAA+B,EAApBC,cAG9B,GAFuBC,EAAeH,GAGpCI,EAAAA,GAAAA,MAAA,UAAeJ,EAAOhB,KAAtB,qCADF,CAKA,IAAMD,EAAU,CACdK,IAAIiB,EAAAA,EAAAA,MACJrB,KAAMgB,EAAOhB,KACbK,OAAQW,EAAOX,QAGjBd,EAASK,EAAAA,GAAAA,WAA8BG,IACvCkB,QAIEE,EAAiB,SAAAG,GAAI,OACzB9B,EAAS+B,MACP,SAAAxB,GAAO,OAAIA,EAAQC,KAAKF,gBAAkBwB,EAAKtB,KAAKF,kBAGxD,OACE,iBAAMiB,SAAUH,EAAOY,aAAvB,UACE,UAACC,EAAA,EAAD,CACEC,MAAM,QACNC,OAAO,SACPC,QAAQ,OACRC,cAAc,SACdC,GAAG,UALL,WAOE,UAACpB,EAAD,CAAOqB,QAAQ,OAAf,kBAEE,kBACE/B,KAAK,OACLO,KAAK,OACLyB,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOI,OAAOhB,WAGzB,UAACU,EAAD,CAAOqB,QAAQ,OAAf,oBAEE,SAAC,IAAD,CACEI,QAAS,KACTvB,OAAQA,EACRoB,SAAU,SAAAI,GAAC,OAAIxB,EAAOM,cAAc,SAAUkB,IAC9CpC,KAAK,SACLkC,MAAOtB,EAAOI,OAAOX,aAGzB,SAACzB,EAAA,EAAD,CAAQ2B,KAAK,SAAb,+BCzEK8B,EAAS,WACpB,OAA6BhD,EAAAA,EAAAA,KAA7B,eAAOC,EAAP,KAAiBC,EAAjB,KACMG,EAASJ,EAASG,EAAAA,GAAAA,WAKxB,OAAO,kBAAOc,KAAK,OAAOP,KAAK,SAASkC,MAAOxC,EAAQsC,SAHtC,SAAAI,GACf,OAAO7C,GAAS+C,EAAAA,EAAAA,IAAaF,EAAEG,cAAcL,YCsCjD,EApCqB,WACnB,OAA6B7C,EAAAA,EAAAA,KAA7B,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAWF,EAASG,EAAAA,GAAAA,gBAM1B,OAJAE,EAAAA,EAAAA,YAAU,WACRJ,EAASK,EAAAA,GAAAA,mBACR,CAACL,KAGF,iCACE,UAACkC,EAAA,EAAD,CACEC,MAAM,QACNC,OAAO,SACPC,QAAQ,OACRC,cAAc,SACdC,GAAG,UALL,WAOE,uCACA,SAACnB,EAAD,KAEA,sCACA,mBAAOoB,QAAQ,SAAf,mCAEE,SAACM,EAAD,OAEmB,IAApB7C,EAASgD,SACR,+BACE,SAACpD,EAAD,UAIN,SAAC,KAAD,CAAgBqD,UAAW","sources":["components/ui/Button.js","components/FriendList/FriendList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: none;\n  outline: none;\n  box-sizing: border-box;\n  padding: 5px;\n  display: block;\n  width: 100px;\n  border-radius: 10px;\n  border: 1px solid ${({ theme }) => theme.colors.backgroundBlueBtn};\n  background-color: ${({ theme }) => theme.colors.backgroundBlueBtn};\n  color: ${({ theme }) => theme.colors.white};\n  cursor: pointer;\n  transition: background-color 200ms ease, color 200ms ease;\n  :hover {\n    background-color: ${({ theme }) => theme.colors.white};\n    color: ${({ theme }) => theme.colors.backgroundBlueBtn};\n  }\n`;\n","import styled from 'styled-components';\nimport { useEffect } from 'react';\nimport { RiContactsBook2Line } from 'react-icons/ri';\nimport { Button } from 'components/ui/Button';\nimport { theme } from 'stylesConfig/theme';\nimport { useRedux } from 'hooks';\nimport { contactsOperations, contactsSelectors } from 'store/contacts';\n\nconst FriendListStyled = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst FriendListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  span {\n    margin: 5px;\n  }\n`;\n\nexport const FriendList = () => {\n  const [selector, dispatch] = useRedux();\n  const contacts = selector(contactsSelectors.getAllContacts);\n  const filter = selector(contactsSelectors.getFilter);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const deleteContactbyId = contactId => {\n    dispatch(contactsOperations.deleteContact(contactId));\n  };\n\n  const getFilteredContacts = () => {\n    const normilizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilter)\n    );\n  };\n\n  return (\n    <FriendListStyled>\n      {getFilteredContacts().map(({ id, name, number }) => (\n        <FriendListItem key={id}>\n          <RiContactsBook2Line fill={theme.colors.backgroundBlueBtn} />\n          <span>{name}: </span>\n          <span>{number}</span>\n          <Button type=\"button\" onClick={() => deleteContactbyId(id)}>\n            Delete\n          </Button>\n        </FriendListItem>\n      ))}\n    </FriendListStyled>\n  );\n};\n","import PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport { nanoid } from 'nanoid';\nimport styled from 'styled-components';\nimport { Box } from 'components/Box';\nimport { Button } from 'components/ui/Button';\nimport { toast } from 'react-toastify';\nimport { useRedux } from 'hooks';\nimport { contactsOperations, contactsSelectors } from 'store/contacts';\nimport { useFormik } from 'formik';\n\nconst Label = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const ContactForm = () => {\n  const [selector, dispatch] = useRedux();\n  const contacts = selector(contactsSelectors.getAllContacts);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '380',\n    },\n    onSubmit: (values, { resetForm, setFieldValue }) => {\n      const isAlreadyAdded = dataValidation(values);\n\n      if (isAlreadyAdded) {\n        toast.error(`${values.name} is already in your contacts`);\n        return;\n      }\n\n      const contact = {\n        id: nanoid(),\n        name: values.name,\n        number: values.number,\n      };\n\n      dispatch(contactsOperations.addContact(contact));\n      resetForm();\n    },\n  });\n\n  const dataValidation = data =>\n    contacts.find(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase()\n    );\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <Box\n        width=\"400px\"\n        margin=\"0 auto\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        as=\"section\"\n      >\n        <Label htmlFor=\"name\">\n          Name\n          <input\n            name=\"name\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n          />\n        </Label>\n        <Label htmlFor=\"test\">\n          Number\n          <PhoneInput\n            country={'ua'}\n            formik={formik}\n            onChange={e => formik.setFieldValue('number', e)}\n            name=\"number\"\n            value={formik.values.number}\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Box>\n    </form>\n  );\n};\n","import { useRedux } from 'hooks';\nimport { changeFilter, contactsSelectors } from 'store/contacts';\n\nexport const Filter = () => {\n  const [selector, dispatch] = useRedux();\n  const filter = selector(contactsSelectors.getFilter);\n\n  const onChange = e => {\n    return dispatch(changeFilter(e.currentTarget.value));\n  };\n  return <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />;\n};\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FriendList } from 'components/FriendList';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { Box } from 'components/Box';\nimport { useRedux } from 'hooks';\nimport { useEffect } from 'react';\nimport { contactsOperations, contactsSelectors } from 'store/contacts';\n\nconst ContactsPage = () => {\n  const [selector, dispatch] = useRedux();\n  const contacts = selector(contactsSelectors.getAllContacts);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Box\n        width=\"400px\"\n        margin=\"0 auto\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        as=\"section\"\n      >\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <label htmlFor=\"filter\">\n          Find contacts by name\n          <Filter />\n        </label>\n        {contacts.length !== 0 && (\n          <>\n            <FriendList />\n          </>\n        )}\n      </Box>\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Button","styled","theme","colors","backgroundBlueBtn","white","FriendListStyled","FriendListItem","FriendList","useRedux","selector","dispatch","contacts","contactsSelectors","filter","useEffect","contactsOperations","normilizedFilter","toLowerCase","contact","name","includes","getFilteredContacts","map","id","number","fill","type","onClick","contactId","Label","ContactForm","formik","useFormik","initialValues","onSubmit","values","resetForm","setFieldValue","dataValidation","toast","nanoid","data","find","handleSubmit","Box","width","margin","display","flexDirection","as","htmlFor","onChange","handleChange","value","country","e","Filter","changeFilter","currentTarget","length","autoClose"],"sourceRoot":""}